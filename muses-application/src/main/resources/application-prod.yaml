#spring.profiles.include: database, log, consul, grpc, auth, fileStore, socketio, redis, live, kafka
##spring.profiles.include: database, log, consul, grpc, auth, fileStore

server:
  port: 9090
  servlet:
    context-path: /
    session:
      timeout: 30s
spring:
  application:
    name: muses
    version: 1.0.0-SNAPSHOT
  main:
    allow-circular-references: true

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
        exclude: info
    health:
      consul.enabled: false
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true #在内存中保存统计监控数据
---
spring:
  profile: database
  datasource:
    mysql:
      driver-class-name: com.mysql.cj.jdbc.Driver
      #      diverClassName: com.mysql.cj.jdbc.Driver
      initial-size: 10
      max-active: 20
      max-idle: 8
      min-idle: 8
      jdbc-url: jdbc:mysql://192.168.131.24:3306/muses_biz?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
      username: root
      password: "&123"
    clickhouse:
      driver-class-name: ru.yandex.clickhouse.ClickHouseDriver
      jdbc-url: jdbc:clickhouse://192.168.131.24:8123/muses_warehouse
      username: default
      password: 123456
      connection-timeout: 20000
      maximum-pool-size: 5
  jpa:
    mysql:
      database: MYSQL
      hibernate:
        ddl-auto: update
        naming-strategy: "org.hibernate.cfg.ImprovedNamingStrategy"
      properties:
        hibernate:
        javax.persistence.query.timeout: 3
      show-sql: true
    clickhouse:
      hibernate:
        ddl-auto: update
      show-sql: true
  http:
    encoding:
      charset: UTF8
      enabled: true
      force: true

---
spring:
  profile: log
logging:
  config: classpath:log4j2.xml
  # 实际打包出的jar不识别classpath关键字
  #  config: log4j2.xml
  level:
    root: INFO
    com.muses.service: debug
    org.hibernate.sql: error
---
spring:
  profile: socketio
app.socketio:
  host: 127.0.0.1        #主机名，默认是 0.0.0.0 （这个设不设置无所谓，因为后面的 SocketConfig 类一般不用设置这个）
  port: 33000            #监听端口
  externalHost: 127.0.0.1:33000
  maxFramePayloadLength: 1048576
  maxHttpContentLength: 1048576
  bossCount: 1
  workCount: 128
  allowCustomRequests: true
  upgradeTimeout: 10000        #协议升级超时时间（毫秒），默认10000。HTTP握手升级为ws协议超时时间
  pingTimeout: 15000        #Ping消息超时时间（毫秒），默认60000，这个时间间隔内没有接收到心跳消息就会发送超时事件
  pingInterval: 5000            #Ping消息间隔（毫秒），默认25000。客户端向服务器发送一条心跳消息间隔, ping间隔不能太短，否则有可能连接刚认证，还没保存到服务器，就收到了ping

---
spring:
  profile: redis
  # Redis配置
  data:
    redis:
      host: 192.168.131.24
      port: 6379
      database: 0
      password: 1234
      # 读超时
      timeout: 3000
      # 连接超时
      connectTimeout: 5000
      # Lettuce连接池
      lettuce:
        pool:
          # 最小空闲连接
          min-idle: 5
          # 最大空闲连接
          max-idle: 10
          # 最大连接数
          max-active: 100
          # 连接分配应该阻塞的最大时间
          max-wait: 3000
---
spring.profile: live
app.live:
  anchorExtendTime: 10000 #主播每次收到心跳可以延长的时间, 下面的延长时间必须大于底层连接的心跳时间间隔，否则会导致连接被断开
  roomExtendTime: 30000 #从主播最后一次发送心跳到服务器开始，每次延长的时间
  audienceExtendTime: 10000 #每次收到心跳后，可以给用户增加的时长
  livePeerConfig:
    iceTransportPolicy: all
    bundlePolicy: balanced
    rtcpMuxPolicy: require
    iceServers:
      - urls: turn:192.168.131.24:13902
        username: faker
        credential: lck
      - urls: turn:192.168.131.24:13902
        username: clearlove
        credential: lpl
  constraints:
    video:
      width: 320 # 1280*720, 320*240, 640*480
      height: 240
      frameRate: 30
    audio: true

---
spring.profile: auth
app.auth:
  jwtSecretKey: 8C6976E5B5410415BDE908BD4DEE15DFB167A9C873FC4BB8A81F6F2AB448A918
  jwtExpireTime: 3600000 #默认jwt token的过期时间，单位毫秒
  algorithm: HS256
---
spring:
  profile: kafka
  kafka:
    datasource:
      pub-video:
        bootstrap-servers: 192.168.131.24:9092
        producer:
          acks: -1
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.apache.kafka.common.serialization.StringSerializer
          retries: 10
          batch-size: 4096
          buffer-memory: 40960000
          compression-type: zstd
        consumer:
          group-id: muses_biz_group
          enable-auto-commit: false
          auto-offset-reset: latest
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          max-poll-records: 10
        listener:
          #consumer手动确认消息，每一批确认一次，它还有个MANUAL_IMMEDIATE表示每批次里每条确认一次
          ack-mode: MANUAL
          #并发拉取线程数，推荐设置为topic的分区数
          concurrency: 1
          #开启批量监听
          type: BATCH
      transcode-video:
        bootstrap-servers: 192.168.131.24:9092
        consumer:
          group-id: muses_biz_group
          enable-auto-commit: false
          auto-offset-reset: latest
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          max-poll-records: 10
        listener:
          #consumer手动确认消息，每一批确认一次，它还有个MANUAL_IMMEDIATE表示每批次里每条确认一次
          ack-mode: MANUAL
          #并发拉取线程数，推荐设置为topic的分区数
          concurrency: 1
          #开启批量监听
          type: BATCH
---
spring:
  profile: consul
  cloud:
    consul:
      host: 127.0.0.1    # Consul 服务器地址
      port: 8499         # Consul 服务器端口
      discovery:
        service-name: ${spring.application.name}
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${random.value}
        register: true   # 将服务注册到 Consul
        prefer-ip-address: true
        heartbeat:
          enabled: true
          reregister-service-on-failure: true #consul重启后重新注册
        enabled: true
        deregister: true
        health-check-interval: 10s
        health-check-critical-timeout: 30s
        health-check-timeout: 30s
        health-check-path: /actuator/health
        automatic-registry-reconnection: true
---
spring:
  profile: grpc
grpc:
  client:
    muses-engine:
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext
---
spring:
  profile: fileStore
app.file-store:
  previewExpireSeconds: 3600